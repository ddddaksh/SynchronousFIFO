$date
	Sat Jul 13 18:50:11 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t2_synchronous_fifo $end
$var wire 8 ! out [7:0] $end
$var wire 1 " full $end
$var wire 1 # empty $end
$var parameter 32 $ DATA_WIDTH $end
$var parameter 32 % DEPTH $end
$var reg 1 & clk $end
$var reg 8 ' in [7:0] $end
$var reg 1 ( read_en $end
$var reg 1 ) reset_n $end
$var reg 1 * write_en $end
$scope module uut $end
$var wire 1 & clk $end
$var wire 1 " full $end
$var wire 8 + in [7:0] $end
$var wire 1 ( read_en $end
$var wire 1 ) reset_n $end
$var wire 1 * write_en $end
$var wire 1 # empty $end
$var parameter 32 , DATA_WIDTH $end
$var parameter 32 - DEPTH $end
$var parameter 32 . ptr_width $end
$var reg 8 / out [7:0] $end
$var reg 4 0 read_ptr [3:0] $end
$var reg 1 1 wrap_around $end
$var reg 4 2 write_ptr [3:0] $end
$upscope $end
$scope task read_fifo $end
$var integer 32 3 i [31:0] $end
$upscope $end
$scope task reset_fifo $end
$upscope $end
$scope task simultaneous_read_write $end
$var integer 32 4 i [31:0] $end
$upscope $end
$scope task write_fifo $end
$var integer 32 5 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 .
b1000 -
b1000 ,
b1000 %
b1000 $
$end
#0
$dumpvars
bx 5
bx 4
bx 3
bx 2
x1
bx 0
bx /
b0 +
0*
0)
0(
b0 '
0&
x#
x"
bx !
$end
#5
0"
01
b0 !
b0 /
1#
b0 0
b0 2
1&
#10
0&
1)
#15
1&
#20
0&
b0 5
#25
0#
b1 2
b100100 '
b100100 +
1*
1&
#30
0&
#35
1&
0*
#40
0&
#45
b10 2
b10000001 '
b10000001 +
1*
1&
b1 5
#50
0&
#55
1&
0*
#60
0&
#65
b11 2
b1001 '
b1001 +
1*
1&
b10 5
#70
0&
#75
1&
0*
#80
0&
#85
b100 2
b1100011 '
b1100011 +
1*
1&
b11 5
#90
0&
#95
1&
0*
#100
0&
#105
b101 2
b1101 '
b1101 +
1*
1&
b100 5
#110
0&
#115
1&
0*
#120
0&
#125
b110 2
b10001101 '
b10001101 +
1*
1&
b101 5
#130
0&
#135
1&
0*
#140
0&
#145
b111 2
b1100101 '
b1100101 +
1*
1&
b110 5
#150
0&
#155
1&
0*
#160
0&
#165
b1000 2
b10010 '
b10010 +
1*
1&
b111 5
#170
0&
#175
1"
11
1&
0*
#180
0&
#185
0"
b1 0
b100100 !
b100100 /
1(
1&
b0 3
b1000 5
#190
0&
#195
1&
0(
#200
0&
#205
b10 0
b10000001 !
b10000001 /
1(
1&
b1 3
#210
0&
#215
1&
0(
#220
0&
#225
b11 0
b1001 !
b1001 /
1(
1&
b10 3
#230
0&
#235
1&
0(
#240
0&
#245
b100 0
b1100011 !
b1100011 /
1(
1&
b11 3
#250
0&
#255
1&
0(
#260
0&
#265
b101 0
b1101 !
b1101 /
1(
1&
b100 3
#270
0&
#275
1&
0(
#280
0&
#285
b110 0
b10001101 !
b10001101 /
1(
1&
b101 3
#290
0&
#295
1&
0(
#300
0&
#305
b111 0
b1100101 !
b1100101 /
1(
1&
b110 3
#310
0&
#315
1&
0(
#320
0&
#325
1"
1#
b1000 0
b10010 !
b10010 /
1(
1&
b111 3
#330
0&
#335
0"
01
1&
0(
#340
0&
#345
0#
b1001 2
b1 '
b1 +
1(
1*
1&
b0 4
b1000 3
#350
0&
#355
1&
0(
0*
#360
0&
#365
b1010 2
0#
b1001 0
b1 !
b1 /
b1101 '
b1101 +
1(
1*
1&
b1 4
#370
0&
#375
1&
0(
0*
#380
0&
#385
b1011 2
0#
b1010 0
b1101 !
b1101 /
b1110110 '
b1110110 +
1(
1*
1&
b10 4
#390
0&
#395
1&
0(
0*
#400
0&
#405
b1100 2
0#
b1011 0
b1110110 !
b1110110 /
b111101 '
b111101 +
1(
1*
1&
b11 4
#410
0&
#415
1&
0(
0*
#420
0&
#425
b1101 2
0#
b1100 0
b111101 !
b111101 /
b11101101 '
b11101101 +
1(
1*
1&
b100 4
#430
0&
#435
1&
0(
0*
#440
0&
#445
b1110 2
0#
b1101 0
b11101101 !
b11101101 /
b10001100 '
b10001100 +
1(
1*
1&
b101 4
#450
0&
#455
1&
0(
0*
#460
0&
#465
b1111 2
0#
b1110 0
b10001100 !
b10001100 /
b11111001 '
b11111001 +
1(
1*
1&
b110 4
#470
0&
#475
1&
0(
0*
#480
0&
#485
b0 2
0#
b1111 0
b11111001 !
b11111001 /
b11000110 '
b11000110 +
1(
1*
1&
b111 4
#490
0&
#495
11
1&
0(
0*
#500
0&
#505
1&
b1000 4
